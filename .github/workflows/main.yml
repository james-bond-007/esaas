# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test Build Python Exe

on:
  push:
    branches:
    - main
    # - release/*

permissions:
  actions: write

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test Build Python Exe
      uses: eric2788/pyinstaller-build@master
      with:
        main: ./src/main
        artifact: Program
        python_version: 3.x
        pyinstaller_version: 5.10.0
        use-dependencies: true
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: python_exe
        path: ${{ github.workspace }}/dist
        
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test Build Python Exe
        uses: eric2788/pyinstaller-build@master
        with:
          main: ./src/main
          artifact: Program
          python_version: 3.x
          pyinstaller_version: 5.10.0
          use-dependencies: true
      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: python_exe
      #     path: dist
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v3
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/program.exe
          asset_name: program
          tag: ${{ github.ref }}
          overwrite: true
          body: "This is my release text"
  # build_release:
  #   runs-on: ubuntu-latest
  #   needs: [build_windows, build_linux] # 或者 build_windows\build_linux，只有在前面的job执行成功后才会运行该job
  #   env:
  #     RELEASE_TAG: ${{ github.ref }}
  #   steps:
  #     # - name: Checkout
  #     #   uses: actions/checkout@v3
  #     # - name: Release
  #     #   uses: softprops/action-gh-release@v1
  #     #   if: startsWith(github.ref, 'refs/tags/')
  #     - name: Upload Asset
  #       id: upload-release-asset
  #       uses: actions/upload-release-asset@v1.0.1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./dist/Program
  #         asset_name: Program-${{ env.RELEASE_TAG }}.exe
  #         asset_content_type: application/octet-stream